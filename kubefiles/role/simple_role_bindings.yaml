#apiVersion: rbac.authorization.k8s.io/v1
## This role binding allows "jane" to read pods in the "default" namespace.
#kind: RoleBinding
#metadata:
#  name: read-pods
#  namespace: default
#subjects:
#- kind: User
#  name: kubernetes # Name is case sensitive
#  apiGroup: rbac.authorization.k8s.io
#roleRef:
#  kind: Role #this must be Role or ClusterRole
#  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
#  apiGroup: rbac.authorization.k8s.io
#---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "dave" to read secrets in the "development" namespace.
kind: RoleBinding
metadata:
  name: read-secrets
  namespace: default
subjects:
- kind: User
  name: admin # Name is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io

#---
#apiVersion: rbac.authorization.k8s.io/v1
## This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
#kind: ClusterRoleBinding
#metadata:
#  name: read-secrets-global
#subjects:
#- kind: Group
#  name: kubernetes # Name is case sensitive
#  apiGroup: rbac.authorization.k8s.io
#roleRef:
#  kind: ClusterRole
#  name: secret-reader
#  apiGroup: rbac.authorization.k8s.io
